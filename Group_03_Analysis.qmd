---
title: "Analysis of the FIES recorded in the Philippines"
author: "Group_03"
number-sections: true
format: 
  html:
    embed-resources: true
    code-tools: true
  pdf: default
editor_options: 
  chunk_output_type: console
execute:
  echo: false
  eval: true
  warning: false
  message: false
---

```{r}
library(ggplot2)
library(GGally)
library(tidyverse)
library(dplyr)
library(gt)
library(patchwork)
library(gridExtra)
library(moderndive)
library(ggcorrplot)

```

# Introduction

# Data Cleaning

```{r}
# Read the data set
Data_FIES <- read.csv("dataset03.csv")
# Tidy the data
FIES <- Data_FIES %>%
  # Place the dependent variable in the first column and delete the unique value
  select(Total.Number.of.Family.members, everything(), -Region) %>%
  # Convert categorical variables into factors
  mutate(
    Household.Head.Sex = as.factor(Household.Head.Sex),
    Type.of.Household = as.factor(Type.of.Household),
    Electricity = as.factor(Electricity)) %>%
  # Remove Missing Values
  drop_na()

```

# Exploratory Data Analysis

```{r}
str(FIES) # Check data structure 
summary(FIES) # Get summary statistics of all variables  
dim(FIES) # Check dataset dimensions (number of rows and columns)

```

## Numerical summaries and Data visualization

Now we can take a look at the numerical summaries and data visualization of dependent variable shown in the following tables and plots:

```{r}
#| label: tbl-y
#| tbl-cap: Summary statistics for 'Total.Number.of.Family.members'
#| tbl-cap-location: top

FIES |>
  summarize('Mean' = mean(Total.Number.of.Family.members),
            'Median' = median(Total.Number.of.Family.members),
            'St.Dev' = sd(Total.Number.of.Family.members),
            'Min' = min(Total.Number.of.Family.members),
            'Max' = max(Total.Number.of.Family.members),
            'IQR' = quantile(Total.Number.of.Family.members,0.75)-quantile(Total.Number.of.Family.members,0.25),
            'Sample_size' = n()
  ) |>
  gt() |>
  fmt_number(decimals=2) |>
  cols_label(
    Mean = html("Mean"),
    Median = html("Median"),
    St.Dev = html("Std. Dev"),
    Min = html("Minimum"),
    Max = html("Maximum"),
    IQR = html("Interquartile Range"),
    Sample_size = html("Sample Size")
  ) 

```

```{r}
#| label: fig-y
#| fig-cap: Histogram of 'Total.Number.of.Family.members'

# Visualize dependent variable distribution
ggplot(FIES, aes(x = Total.Number.of.Family.members)) +
  geom_histogram(binwidth = 1, fill = "steelblue", color = "black") +
  labs(x = "Number of Family Members", y = "Frequency")

```

From @tbl-y, 

@fig-y shows that

Then check the variance of the dependent variable and compare with the mean:
```{r}
var <- var(FIES$Total.Number.of.Family.members)
var_ratio <- var/mean

```
var/mean=5.28/4.68=1.13â‰ˆ1 indicates that there is no overdispersion problem, so Poisson regression model may be appropriate.

Then we separate independent variables into categorical variables and numerical variables for analysis.

(1) Categorical Variables

```{r}
#| label: tbl-y-sex
#| tbl-cap: Summary statistics on 'Total.Number.of.Family.members' by 'Household.Head.Sex' 
#| tbl-cap-location: top

FIES |>
  summarize('Mean' = mean(Total.Number.of.Family.members),
            'Median' = median(Total.Number.of.Family.members),
            'St.Dev' = sd(Total.Number.of.Family.members),
            'Min' = min(Total.Number.of.Family.members),
            'Max' = max(Total.Number.of.Family.members),
            'IQR' = quantile(Total.Number.of.Family.members,0.75)-quantile(Total.Number.of.Family.members,0.25),
            'Sample_size' = n(),
            .by = Household.Head.Sex) |>
  gt() |>
  fmt_number(decimals=2) |>
  cols_label(
    Mean = html("Mean"),
    Median = html("Median"),
    St.Dev = html("Std. Dev"),
    Min = html("Minimum"),
    Max = html("Maximum"),
    IQR = html("Interquartile Range"),
    Sample_size = html("Sample Size")
  )

```

```{r}
#| label: fig-y-sex
#| fig-cap: Boxplot of 'Total.Number.of.Family.members' by 'Household.Head.Sex'

ggplot(FIES, aes(x = Household.Head.Sex, y = Total.Number.of.Family.members, fill = Household.Head.Sex)) +
  geom_boxplot() +
  labs(x = "Household Head's Gender", y = "Family Size") 

```

From @tbl-y-sex,

@fig-y-sex shows that

```{r}
#| label: tbl-y-household
#| tbl-cap: Summary statistics on 'Total.Number.of.Family.members' by 'Type.of.Household' 
#| tbl-cap-location: top

FIES |>
  summarize('Mean' = mean(Total.Number.of.Family.members),
            'Median' = median(Total.Number.of.Family.members),
            'St.Dev' = sd(Total.Number.of.Family.members),
            'Min' = min(Total.Number.of.Family.members),
            'Max' = max(Total.Number.of.Family.members),
            'IQR' = quantile(Total.Number.of.Family.members,0.75)-quantile(Total.Number.of.Family.members,0.25),
            'Sample_size' = n(),
            .by = Type.of.Household) |>
  gt() |>
  fmt_number(decimals=2) |>
  cols_label(
    Mean = html("Mean"),
    Median = html("Median"),
    St.Dev = html("Std. Dev"),
    Min = html("Minimum"),
    Max = html("Maximum"),
    IQR = html("Interquartile Range"),
    Sample_size = html("Sample Size")
  )

```

```{r}
#| label: fig-y-household
#| fig-cap: Boxplot of 'Total.Number.of.Family.members' by 'Type.of.Household'

ggplot(FIES, aes(x = Type.of.Household, y = Total.Number.of.Family.members, fill = Type.of.Household)) +
  geom_boxplot() +
  labs(x = "Household Type", y = "Family Size") 

```

From @tbl-y-household,

@fig-y-household shows that

```{r}
#| label: tbl-y-electricity
#| tbl-cap: Summary statistics on 'Total.Number.of.Family.members' by 'Electricity' 
#| tbl-cap-location: top

FIES |>
  summarize('Mean' = mean(Total.Number.of.Family.members),
            'Median' = median(Total.Number.of.Family.members),
            'St.Dev' = sd(Total.Number.of.Family.members),
            'Min' = min(Total.Number.of.Family.members),
            'Max' = max(Total.Number.of.Family.members),
            'IQR' = quantile(Total.Number.of.Family.members,0.75)-quantile(Total.Number.of.Family.members,0.25),
            'Sample_size' = n(),
            .by = Electricity) |>
  gt() |>
  fmt_number(decimals=2) |>
  cols_label(
    Mean = html("Mean"),
    Median = html("Median"),
    St.Dev = html("Std. Dev"),
    Min = html("Minimum"),
    Max = html("Maximum"),
    IQR = html("Interquartile Range"),
    Sample_size = html("Sample Size")
  )

```

```{r}
#| label: fig-y-electricity
#| fig-cap: Boxplot of 'Total.Number.of.Family.members' by 'Electricity'

ggplot(FIES, aes(x = Electricity, y = Total.Number.of.Family.members, fill = Electricity)) +
  geom_boxplot() +
  labs(x = "Electricity (0 = No, 1 = Yes)", y = "Family Size") 

```

From @tbl-y-electricity,

@fig-y-electricity shows that

(2) Numerical Variables

```{r}
#| label: fig-his-num
#| fig-cap: Histograms for Numerical Variables

p1 <- ggplot(FIES, aes(x = Total.Household.Income)) +
  geom_histogram(fill = "steelblue", color = "black", bins = 30) +
  labs(title = "Household Income Distribution", x = "Household Income", y = "Count")
p2 <- ggplot(FIES, aes(x = Total.Food.Expenditure)) +
  geom_histogram(fill = "steelblue", color = "black", bins = 30) +
  labs(title = "Household Expenditure Distribution", x = "Household Expenditure", y = "Count")
p3 <- ggplot(FIES, aes(x = Household.Head.Age)) +
  geom_histogram(fill = "steelblue", color = "black", bins = 30) +
  labs(title = "Household Head Age Distribution", x = "Household Head Age", y = "Count")
p4 <- ggplot(FIES, aes(x = House.Floor.Area)) +
  geom_histogram(fill = "steelblue", color = "black", bins = 30) +
  labs(title = "House Floor Area Distribution", x = "House Floor Area", y = "Count")
p5 <- ggplot(FIES, aes(x = House.Age)) +
  geom_histogram(fill = "steelblue", color = "black", bins = 30) +
  labs(title = "House Age Distribution", x = "House Age", y = "Count")
p6 <- ggplot(FIES, aes(x = Number.of.bedrooms)) +
  geom_histogram(fill = "steelblue", color = "black", bins = 30) +
  labs(title = "Number of bedrooms Distribution", x = "Number of bedrooms", y = "Count")
(p1 | p2 | p3) / (p4 | p5 | p6)
```

From @fig-his-num,we can see the distributions of Household Income, Household Expenditure, and House Floor Area are right-skewed, so applying a log transformation would be beneficial when fitting a Poisson model. Household Head Age follows an approximately normal distribution, so no transformation is needed. House Age exhibits a bimodal distribution, suggesting that binning it into categorical groups would be appropriate. The Number of Bedrooms is a discrete variable and should also be converted into a categorical variable for analysis.

```{r}
# Convert 'House.Age' to categorical variable
FIES$House.Age.Group <- cut(FIES$House.Age, breaks=c(0,10,30,100), labels=c("New","Middle","Old"))

# Convert categorical variable into factor
FIES$House.Age.Group <- factor(FIES$House.Age.Group)

# Remove the 'House.Age' column
FIES <- FIES %>% select(-House.Age)

```

```{r}
# Convert 'Number.of.bedrooms' to categorical variable
FIES$Bedroom.Category <- cut(FIES$Number.of.bedrooms, 
                             breaks = c(0, 1, 3, 5, Inf), 
                             labels = c("Small", "Medium", "Large", "Luxury"),
                             right = TRUE)

# Convert categorical variable into factor
FIES$Bedroom.Category <- factor(FIES$Bedroom.Category)

# Remove the 'Number.of.bedrooms' column
FIES <- FIES %>% select(-Number.of.bedrooms)

```

Then we can use the heat map to check the correlation between numerical variables and dependent variable:
```{r}
#| label: fig-corr-num
#| fig-cap: Heat map for numerical variables by 'Total.Number.of.Family.members' 

# Select all numerical variables
numeric_vars <- FIES[, sapply(FIES, is.numeric)]
# Since our dependent variable is a count varaible, use Spearman method
cor_matrix <- cor(numeric_vars, method = "spearman")
# Plot the correlation heatmap
ggcorrplot(cor_matrix, type = "full", lab = TRUE, lab_size = 4, 
           colors = c("blue", "white", "orange"), outline.color = "black", 
           legend.title = "Correlation") +
  labs(title = "Correlation Matrix for Numeric Variables") +
  theme(
    axis.text.x = element_text(size = 9, angle = 45, vjust = 1, hjust = 1),
    axis.text.y = element_text(size = 9),
    legend.text = element_text(size = 14),
    legend.title = element_text(size = 16)
  )

```

Form @fig-corr-num,


# Formal Data Analysis

```{r}
# Fit a Poisson regression model
poisson_model <- glm(Total.Number.of.Family.members ~ 
                       log(Total.Household.Income) +
                       log(Total.Food.Expenditure) +
                       Household.Head.Sex +
                       Household.Head.Age + 
                       Type.of.Household +
                       log(House.Floor.Area) +
                       Electricity +
                       House.Age.Group +
                       Bedroom.Category, 
                     family = poisson(link = "log"),
                     data = FIES)
summary(poisson_model)

```

```{r}
# Check the Relative Risk(RR)
exp(coef(poisson_model)) 
# For Poission Regression, coefficients represent log-relative risk, so convert them to RR

```

```{r}
# plot the Pearson and deviance residuals against the linear predictor
resp <- resid(poisson_model, type = "pearson")
resd <- resid(poisson_model, type = "deviance")
p1 <- ggplot(poisson_model, aes(sample = resp)) + geom_point(stat = "qq", color = "steelblue") +
  ylab("Pearson residuals")

p2 <- ggplot(poisson_model, aes(sample = resd)) + geom_point(stat = "qq", color = "steelblue") +
  ylab("Deviance residuals")

p3 <- ggplot(poisson_model, aes(x = predict(poisson_model, type="link"), y =resp))+
  geom_point(col = "steelblue") +
  ylab("Pearson residuals") + xlab("Linear predictor")

p4 <- ggplot(poisson_model, aes(x = predict(poisson_model, type="link"), y =resd))+
  geom_point(col = "steelblue") +
  ylab("Deviance residuals") + xlab("Linear predictor")

grid.arrange(p1, p2, p3, p4, nrow = 2)
```

# Conclusion
