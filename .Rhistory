Bedroom.Category +
Electricity,
family = poisson(link = "log"),
data = FIES)
summary(poisson_model_cat)
#| echo: false
drop1(poisson_model_cat, test = "F")
#| echo: true
poisson_model2 <- glm(Family_Size ~
log(Income) +
log(Food_Exp) +
Head_Sex +
Head_Age +
Household_Type +
log(House_Age+1) +
Electricity,
family = poisson(link = "log"),
data = FIES)
#| echo: false
summary(poisson_model2)
#| label: fig-residual
#| fig-cap: The Pearson and deviance residuals against the linear predictor
resp<-resid(poisson_model2,type= "pearson")
resd<-resid(poisson_model2,type= "deviance")
p1 <- ggplot(data.frame(sample = resp), aes(sample = sample)) +
geom_point(stat = "qq", color = "steelblue") +
ylab("Pearson Residuals")
p2 <- ggplot(data.frame(sample = resd), aes(sample = sample)) +
geom_point(stat = "qq", color = "steelblue") +
ylab("Deviance Residuals")
p3 <- ggplot(poisson_model2, aes(x = log(fitted(poisson_model2)), y = residuals(poisson_model2, type = "pearson"))) +
geom_jitter(color = "tomato",width = 0.5, height = 0.5) +
geom_abline(slope = 0, intercept = 0, col = "steelblue", linewidth = 1) +
ylab("Pearson Residuals") + xlab(expression(hat(mu)))
grid.arrange(arrangeGrob(p1, p2, ncol = 1), p3, ncol = 2)
#| label: fig-likelihood
#| fig-cap: Regular likelihood and Quasi-likelihood
X2 <- sum(resid(poisson_model2, type = "pearson")^2)
dp <- X2 / poisson_model2$df.res
summary(poisson_model2, dispersion = dp)
pred <- predict(poisson_model2, type = "response")
stand.resid <- rstandard(model = poisson_model2, type = "pearson") # Standardised Pearson residuals
par(mfrow=c(1,2))
plot(x = pred, y = stand.resid, xlab = "Predicted count", ylab = "Standardised Pearson residuals",
main = "Regular likelihood", ylim = c(-5,5))
abline(h = c(-3,-2, 0, 2, 3), lty = "dotted", col = "red")
# Fit the third Poisson regression model
poisson_model3 <- glm(Family_Size ~
log(Income) +
log(Food_Exp) +
Head_Sex +
Head_Age +
Household_Type +
log(House_Age+1) +
Electricity,
family = quasipoisson(link = "log"),
data = FIES)  # Quasi-Poisson model
pred <- predict(poisson_model3, type = "response")
stand.resid <- rstandard(model = poisson_model3, type = "pearson") # Standardised Pearson residuals
plot(x = pred, y = stand.resid, xlab = "Predicted count", ylab = "Standardised Pearson residuals",
main = "Quasi-likelihood", ylim = c(-5,5))
abline(h = c(-3,-2, 0, 2, 3), lty = "dotted", col = "red")
#| echo: true
poisson_model4 <- glm(Family_Size ~
log(Income) * log(Food_Exp) +
Head_Sex +
Head_Age +
Household_Type +
log(House_Age + 1) +
Electricity,
family = poisson(link = "log"),
data = FIES)
#| echo: false
anova(poisson_model2, poisson_model4, test = "LRT")
#| label: fig-residual2
#| fig-cap: The Pearson and deviance residuals against the linear predictor
resp<-resid(poisson_model4,type= "pearson")
resd<-resid(poisson_model4,type= "deviance")
p1 <- ggplot(data.frame(sample = resp), aes(sample = sample)) +
geom_point(stat = "qq", color = "steelblue") +
ylab("Pearson Residuals")
p2 <- ggplot(data.frame(sample = resd), aes(sample = sample)) +
geom_point(stat = "qq", color = "steelblue") +
ylab("Deviance Residuals")
p3 <- ggplot(poisson_model4, aes(x = log(fitted(poisson_model4)), y = residuals(poisson_model4, type = "pearson"))) +
geom_jitter(color = "tomato",width = 0.5, height = 0.5) +
geom_abline(slope = 0, intercept = 0, col = "steelblue", linewidth = 1) +
ylab("Pearson Residuals") + xlab(expression(hat(mu)))
grid.arrange(arrangeGrob(p1, p2, ncol = 1), p3, ncol = 2)
#| echo: false
# Check the Relative Risk(RR)
model_summary <- tidy(poisson_model4) %>%
mutate(RR = exp(estimate))
#model_summary
model_summary %>%
select(term, estimate, RR) %>%
kable("latex", caption = "Poisson Model Coefficients and Relative Risks") %>%
kable_styling("striped", full_width = F)
#| echo: true
# Read the data set
Data_FIES <- read.csv("dataset03.csv")
# Tidy the data
FIES <- Data_FIES %>%
# Place the dependent variable in the first column and delete the unique value
select(Total.Number.of.Family.members, everything(), -Region) %>%
# Convert categorical variables into factors
mutate(
Household.Head.Sex = as.factor(Household.Head.Sex),
Type.of.Household = as.factor(Type.of.Household),
Electricity = as.factor(Electricity)) %>%
# Remove Missing Values
drop_na()
FIES_saved <- FIES # Used for model fitting
#| echo: true
str(FIES) # Check data structure
summary(FIES) # Get summary statistics of all variables
dim(FIES) # Check dataset dimensions (number of rows and columns)
#| label: tbl-y
#| tbl-cap: Summary statistics for 'Total.Number.of.Family.members'
#| tbl-cap-location: top
FIES |>
summarize('Mean' = mean(Total.Number.of.Family.members),
'Median' = median(Total.Number.of.Family.members),
'St.Dev' = sd(Total.Number.of.Family.members),
'Min' = min(Total.Number.of.Family.members),
'Max' = max(Total.Number.of.Family.members),
'IQR' = quantile(Total.Number.of.Family.members,0.75)-quantile(Total.Number.of.Family.members,0.25),
'Sample_size' = n()
) |>
gt() |>
fmt_number(decimals=2) |>
cols_label(
Mean = html("Mean"),
Median = html("Median"),
St.Dev = html("Std. Dev"),
Min = html("Minimum"),
Max = html("Maximum"),
IQR = html("Interquartile Range"),
Sample_size = html("Sample Size")
)
#| label: fig-y
#| fig-cap: Histogram of 'Total.Number.of.Family.members'
# Visualize dependent variable distribution
ggplot(FIES, aes(x = Total.Number.of.Family.members)) +
geom_histogram(binwidth = 1, fill = "steelblue", color = "black") +
labs(x = "Number of Family Members", y = "Frequency")
mean <- mean(FIES$Total.Number.of.Family.members)
var <- var(FIES$Total.Number.of.Family.members)
var_ratio <- var/mean
cat("mean =",mean,"\n")
cat("var =",var,"\n")
cat("var_ratio =",var_ratio,"\n")
#| label: tbl-y-sex
#| tbl-cap: Summary statistics on 'Total.Number.of.Family.members' by 'Household.Head.Sex'
#| tbl-cap-location: top
FIES |>
summarize('Mean' = mean(Total.Number.of.Family.members),
'Median' = median(Total.Number.of.Family.members),
'St.Dev' = sd(Total.Number.of.Family.members),
'Min' = min(Total.Number.of.Family.members),
'Max' = max(Total.Number.of.Family.members),
'IQR' = quantile(Total.Number.of.Family.members, 0.75) - quantile(Total.Number.of.Family.members, 0.25),
'Sample_size' = n(),
.by = Household.Head.Sex) |>
gt() |>
fmt_number(decimals = 2) |>
cols_label(
Mean = html("Mean"),
Median = html("Median"),
St.Dev = html("Std. Dev"),
Min = html("Min"),
Max = html("Max"),
IQR = html("IQR"),
Sample_size = html("Sample")
) |>
tab_spanner(
label = "Family Size Summary",
columns = c("Mean", "Median", "St.Dev", "Min", "Max", "IQR", "Sample_size")
) |>
tab_options(
table.width = pct(90),  # Slightly wider table
table.font.size = 12,   # Adjust font size
table.border.top.width = px(2),   # Adjust border width for top border
table.border.bottom.width = px(2) # Adjust bottom border width
)
#| label: fig-y-sex
#| fig-cap: Boxplot of 'Total.Number.of.Family.members' by 'Household.Head.Sex'
ggplot(FIES, aes(x = Household.Head.Sex, y = Total.Number.of.Family.members, fill = Household.Head.Sex)) +
geom_boxplot() +
scale_fill_manual(values = c("tomato","steelblue")) +
labs(x = "Household Head's Gender", y = "Family Size")
#| label: tbl-y-household
#| tbl-cap: Summary statistics on 'Total.Number.of.Family.members' by 'Type.of.Household'
#| tbl-cap-location: top
FIES |>
summarize('Mean' = mean(Total.Number.of.Family.members),
'Median' = median(Total.Number.of.Family.members),
'St.Dev' = sd(Total.Number.of.Family.members),
'Min' = min(Total.Number.of.Family.members),
'Max' = max(Total.Number.of.Family.members),
'IQR' = quantile(Total.Number.of.Family.members, 0.75) - quantile(Total.Number.of.Family.members, 0.25),
'Sample_size' = n(),
.by = Type.of.Household) |>
gt() |>
fmt_number(decimals = 2) |>
cols_label(
Mean = html("Mean"),
Median = html("Median"),
St.Dev = html("Std. Dev"),
Min = html("Min"),
Max = html("Max"),
IQR = html("IQR"),
Sample_size = html("Sample Size")
) |>
tab_spanner(
label = "Household Summary",
columns = c("Mean", "Median", "St.Dev", "Min", "Max", "IQR", "Sample_size")
) |>
tab_options(
table.width = pct(90),  # Slightly wider table
table.font.size = 12,   # Adjust font size
table.border.top.width = px(2),   # Adjust border width for top border
table.border.bottom.width = px(2) # Adjust bottom border width
)
#| label: fig-y-household
#| fig-cap: Boxplot of 'Total.Number.of.Family.members' by 'Type.of.Household'
# Renaming levels of Type.of.Household
FIES$Type.of.Household <- recode(FIES$Type.of.Household,
"Extended Family" = "Extended",
"Single Family" = "Single",
"Two or More Nonrelated Persons/Members" = "More")
ggplot(FIES, aes(x = Type.of.Household, y = Total.Number.of.Family.members, fill = Type.of.Household)) +
geom_boxplot() +
scale_fill_manual(values = c("gold","tomato","steelblue")) +
labs(x = "Household Type", y = "Family Size") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(size = 10),
axis.title = element_text(size = 10))
#| label: tbl-y-electricity
#| tbl-cap: Summary statistics on Family.members by Electricity
#| tbl-cap-location: top
FIES |>
summarize('Mean' = mean(Total.Number.of.Family.members),
'Median' = median(Total.Number.of.Family.members),
'St.Dev' = sd(Total.Number.of.Family.members),
'Min' = min(Total.Number.of.Family.members),
'Max' = max(Total.Number.of.Family.members),
'IQR' = quantile(Total.Number.of.Family.members, 0.75) - quantile(Total.Number.of.Family.members, 0.25),
'Sample_size' = n(),
.by = Electricity) |>
gt() |>
fmt_number(decimals = 2) |>
cols_label(
Mean = html("Mean"),
Median = html("Median"),
St.Dev = html("Std"),
Min = html("Min"),
Max = html("Max"),
IQR = html("IQ"),
Sample_size = html("Sample")
) |>
tab_options(
table.width = pct(90),  # Slightly wider table
table.font.size = 12,   # Adjust font size
table.border.top.width = px(2),   # Adjust border width for top border
table.border.bottom.width = px(2) # Adjust bottom border width
)
#| label: fig-y-electricity
#| fig-cap: Boxplot of 'Total.Number.of.Family.members' by 'Electricity'
ggplot(FIES, aes(x = Electricity, y = Total.Number.of.Family.members, fill = Electricity)) +
geom_boxplot() +
scale_fill_manual(values = c("tomato","steelblue")) +
labs(x = "Electricity (0 = No, 1 = Yes)", y = "Family Size")
#| label: fig-his-num
#| fig-cap: Histograms for Numerical Variables
p1 <- ggplot(FIES, aes(x = Total.Household.Income)) +
geom_histogram(fill = "steelblue", color = "black", bins = 30) +
labs(title = "Household Income", x = "Income", y = "Count") +
theme(plot.title = element_text(size = 10))
p2 <- ggplot(FIES, aes(x = Total.Food.Expenditure)) +
geom_histogram(fill = "steelblue", color = "black", bins = 30) +
labs(title = "Household Expenditure", x = "Expenditure", y = "Count") +
theme(plot.title = element_text(size = 10))
p3 <- ggplot(FIES, aes(x = Household.Head.Age)) +
geom_histogram(fill = "steelblue", color = "black", bins = 30) +
labs(title = "Household Head Age", x = "Age", y = "Count") +
theme(plot.title = element_text(size = 10))
p4 <- ggplot(FIES, aes(x = House.Floor.Area)) +
geom_histogram(fill = "steelblue", color = "black", bins = 30) +
labs(title = "House Floor Area", x = "Area", y = "Count") +
theme(plot.title = element_text(size = 10))
p5 <- ggplot(FIES, aes(x = House.Age)) +
geom_histogram(fill = "steelblue", color = "black", bins = 30) +
labs(title = "House Age Distribution", x = "Age", y = "Count") +
theme(plot.title = element_text(size = 10))
p6 <- ggplot(FIES, aes(x = Number.of.bedrooms)) +
geom_histogram(fill = "steelblue", color = "black", bins = 30) +
labs(title = "Number of Bedrooms", x = "Bedrooms_Number", y = "Count") +
theme(plot.title = element_text(size = 10))
(p1 | p2 | p3) / (p4 | p5 | p6)
#| echo: true
# Convert 'Number.of.bedrooms' to categorical variable
FIES$Bedroom.Category <- cut(FIES$Number.of.bedrooms,
c(-1, 1, 3, Inf),
labels = c("Small", "Medium", "Large"),right = TRUE)
# Convert categorical variable into factor
FIES$Bedroom.Category <- factor(FIES$Bedroom.Category)
#| label: fig-corr-num
#| fig-cap: Heat map for numerical variables by 'Total.Number.of.Family.members'
FIES <- FIES_saved
colnames(FIES) <- c("Family_Size", "Income", "Food_Exp", "Head_Sex", "Head_Age","Household_Type", "Floor_Area", "House_Age", "Bedrooms", "Electricity")
# Select all numerical variables
numeric_vars <- FIES[, sapply(FIES, is.numeric)]
# Since our dependent variable is a count varaible, use Spearman method
cor_matrix <- cor(numeric_vars, method = "spearman")
# Plot the correlation heatmap
ggcorrplot(cor_matrix, type = "full", lab = TRUE, lab_size = 3,
colors = c("blue", "white", "red"), outline.color = "black",
legend.title = "Correlation") +
labs(title = "Correlation Matrix for Numeric Variables") +
theme(
axis.text.x = element_text(size = 9, angle = 45, vjust = 1, hjust = 1),
axis.text.y = element_text(size = 9),
legend.text = element_text(size = 14),
legend.title = element_text(size = 16)
)
#| echo: true
#| eval: false
poisson_model1 <- glm(Family_Size ~
log(Income) +
log(Food_Exp) +
Head_Sex +
Head_Age +
Household_Type +
log(Floor_Area) +
log(House_Age+0.1) +
Bedrooms +
Electricity,
family = poisson(link = "log"),
data = FIES)
summary(poisson_model1)
drop1(poisson_model1, test = "F")
#| echo: true
FIES$Bedroom.Category <- cut(FIES$Bedrooms,
breaks = c(-1, 1, 3, Inf),
labels = c("Small", "Medium", "Large"),
right = TRUE)
FIES$Bedroom.Category <- factor(FIES$Bedroom.Category)
#| echo: true
model_cat <- lm(Family_Size ~ Bedroom.Category, data = FIES)
#| echo: true
model_summary <- summary(model_cat)$coefficients
library(knitr)
kable(model_summary, caption = "Model Coefficients and Significance", format = "latex")
#| echo: true
#| eval: false
poisson_model_cat <- glm(Family_Size ~
log(Income) +
log(Food_Exp) +
Head_Sex +
Head_Age +
Household_Type +
log(House_Age+1) +
Bedroom.Category +
Electricity,
family = poisson(link = "log"),
data = FIES)
summary(poisson_model_cat)
drop1(poisson_model_cat, test = "F")
#| echo: true
poisson_model2 <- glm(Family_Size ~
log(Income) +
log(Food_Exp) +
Head_Sex +
Head_Age +
Household_Type +
log(House_Age+1) +
Electricity,
family = poisson(link = "log"),
data = FIESES)
#| echo: true
poisson_model2 <- glm(Family_Size ~
log(Income) +
log(Food_Exp) +
Head_Sex +
Head_Age +
Household_Type +
log(House_Age+1) +
Electricity,
family = poisson(link = "log"),
data = FIES)
#| eval: false
summary(poisson_model2)
#| label: fig-residual1
#| fig-cap: The Pearson and deviance residuals against the linear predictor
resp<-resid(poisson_model2,type= "pearson")
resd<-resid(poisson_model2,type= "deviance")
p1 <- ggplot(data.frame(sample = resp), aes(sample = sample)) +
geom_point(stat = "qq", color = "steelblue") +
ylab("Pearson Residuals")
p2 <- ggplot(data.frame(sample = resd), aes(sample = sample)) +
geom_point(stat = "qq", color = "steelblue") +
ylab("Deviance Residuals")
p3 <- ggplot(poisson_model2, aes(x = log(fitted(poisson_model2)), y = residuals(poisson_model2, type = "pearson"))) +
geom_jitter(color = "tomato",width = 0.5, height = 0.5) +
geom_abline(slope = 0, intercept = 0, col = "steelblue", linewidth = 1) +
ylab("Pearson Residuals") + xlab(expression(hat(mu)))
grid.arrange(arrangeGrob(p1, p2, ncol = 1), p3, ncol = 2)
#| label: fig-likelihood
#| fig-cap: Regular likelihood and Quasi-likelihood
X2 <- sum(resid(poisson_model2, type = "pearson")^2)
dp <- X2 / poisson_model2$df.res
summary(poisson_model2, dispersion = dp)
pred <- predict(poisson_model2, type = "response")
stand.resid <- rstandard(model = poisson_model2, type = "pearson") # Standardised Pearson residuals
par(mfrow=c(1,2))
plot(x = pred, y = stand.resid, xlab = "Predicted count", ylab = "Standardised Pearson residuals",
main = "Regular likelihood", ylim = c(-5,5))
abline(h = c(-3,-2, 0, 2, 3), lty = "dotted", col = "red")
# Fit the third Poisson regression model
poisson_model3 <- glm(Family_Size ~
log(Income) +
log(Food_Exp) +
Head_Sex +
Head_Age +
Household_Type +
log(House_Age+1) +
Electricity,
family = quasipoisson(link = "log"),
data = FIES)  # Quasi-Poisson model
pred <- predict(poisson_model3, type = "response")
stand.resid <- rstandard(model = poisson_model3, type = "pearson") # Standardised Pearson residuals
plot(x = pred, y = stand.resid, xlab = "Predicted count", ylab = "Standardised Pearson residuals",
main = "Quasi-likelihood", ylim = c(-5,5))
abline(h = c(-3,-2, 0, 2, 3), lty = "dotted", col = "red")
#| echo: true
poisson_model4 <- glm(Family_Size ~
log(Income) * log(Food_Exp) +
Head_Sex +
Head_Age +
Household_Type +
log(House_Age + 1) +
Electricity,
family = poisson(link = "log"),
data = FIES)
anova(poisson_model2, poisson_model4, test = "LRT")
#| label: fig-residual2
#| fig-cap: The Pearson and deviance residuals against the linear predictor
resp<-resid(poisson_model4,type= "pearson")
resd<-resid(poisson_model4,type= "deviance")
p1 <- ggplot(data.frame(sample = resp), aes(sample = sample)) +
geom_point(stat = "qq", color = "steelblue") +
ylab("Pearson Residuals")
p2 <- ggplot(data.frame(sample = resd), aes(sample = sample)) +
geom_point(stat = "qq", color = "steelblue") +
ylab("Deviance Residuals")
p3 <- ggplot(poisson_model4, aes(x = log(fitted(poisson_model4)), y = residuals(poisson_model4, type = "pearson"))) +
geom_jitter(color = "tomato",width = 0.5, height = 0.5) +
geom_abline(slope = 0, intercept = 0, col = "steelblue", linewidth = 1) +
ylab("Pearson Residuals") + xlab(expression(hat(mu)))
grid.arrange(arrangeGrob(p1, p2, ncol = 1), p3, ncol = 2)
# Check the Relative Risk(RR)
model_summary <- tidy(poisson_model4) %>%
mutate(RR = exp(estimate))
#model_summary
model_summary %>%
select(term, estimate, RR) %>% # For Poission Regression, coefficients represent log-relative risk, so convert them to RR
kable("latex", caption = "Poisson Model Coefficients and Relative Risks") %>%
kable_styling("striped", full_width = F)
#| echo: true
poisson_model1 <- glm(Family_Size ~
log(Income) +
log(Food_Exp) +
Head_Sex +
Head_Age +
Household_Type +
log(Floor_Area) +
log(House_Age+0.1) +
Bedrooms +
Electricity,
family = poisson(link = "log"),
data = FIES)
#| eval: false
summary(poisson_model1)
drop1(poisson_model1, test = "F")
#| echo: true
FIES$Bedroom.Category <- cut(FIES$Bedrooms,
breaks = c(-1, 1, 3, Inf),
labels = c("Small", "Medium", "Large"),
right = TRUE)
FIES$Bedroom.Category <- factor(FIES$Bedroom.Category)
#| echo: true
model_cat <- lm(Family_Size ~ Bedroom.Category, data = FIES)
#| echo: true
model_summary <- summary(model_cat)$coefficients
library(knitr)
kable(model_summary, caption = "Model Coefficients and Significance", format = "latex")
#| echo: true
poisson_model_cat <- glm(Family_Size ~
log(Income) +
log(Food_Exp) +
Head_Sex +
Head_Age +
Household_Type +
log(House_Age+1) +
Bedroom.Category +
Electricity,
family = poisson(link = "log"),
data = FIES)
#| eval: false
summary(poisson_model_cat)
drop1(poisson_model_cat, test = "F")
